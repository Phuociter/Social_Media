{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  posts: [],\n  loading: false,\n  error: null\n};\nconst postSlice = createSlice({\n  name: \"post\",\n  initialState,\n  reducers: {\n    //Action load bài viết\n    getPostsStart(state) {\n      state.loading = true;\n      state.error = null;\n    },\n    getPostsSuccess(state, action) {\n      console.log(\"Updating Redux state with:\", action.payload);\n      state.posts = [...action.payload]; // Gán dữ liệu mới\n      state.loading = false;\n    },\n    getPostsFailed(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    // Action thêm bài viết mới\n    addPost(state, action) {\n      state.posts.unshift(action.payload); //Thêm vào đầu mảng\n    },\n\n    // Xóa bài viết\n    deletePost(state, action) {\n      state.posts = state.posts.filter(post => post.postId != action.payload);\n    },\n    // Cập nhật bài viết\n    updatePost(state, action) {\n      const index = state.posts.findIndex(post => post.postId == action.payload);\n      if (index != -1) {\n        state.posts[index] = action.payload;\n      }\n    },\n    toggleLikeState(state, action) {\n      const {\n        postId,\n        userId\n      } = action.payload;\n      const post = state.posts.find(p => p.postId === postId);\n      if (post) {\n        const likes = post.likes || [];\n        const isLiked = likes.some(like => like.userId === userId);\n        if (isLiked) {\n          post.likes = likes.filter(like => like.userId !== userId);\n          post.likeCount -= 1;\n        } else {\n          post.likes.push({\n            userId,\n            postId\n          });\n          post.likeCount += 1;\n        }\n      }\n    }\n  }\n});\nexport const {\n  getPostsStart,\n  getPostsSuccess,\n  getPostsFailed,\n  addPost,\n  deletePost,\n  updatePost,\n  toggleLikeState\n} = postSlice.actions;\nexport default postSlice.reducer;\n\n// export function SetPosts(post) {\n//   return (dispatch, getState) => {\n//     dispatch(postSlice.actions.getPosts(post));\n//   };\n// }","map":{"version":3,"names":["createSlice","initialState","posts","loading","error","postSlice","name","reducers","getPostsStart","state","getPostsSuccess","action","console","log","payload","getPostsFailed","addPost","unshift","deletePost","filter","post","postId","updatePost","index","findIndex","toggleLikeState","userId","find","p","likes","isLiked","some","like","likeCount","push","actions","reducer"],"sources":["D:/code/XDPMTMHPL/doan/FE_SocialMedia-main/src/redux/postSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  loading: false,\r\n  error: null\r\n\r\n};\r\n\r\nconst postSlice = createSlice({\r\n  name: \"post\",\r\n  initialState,\r\n  reducers: {\r\n    //Action load bài viết\r\n    getPostsStart(state) {\r\n      state.loading=true;\r\n      state.error=null;\r\n    },\r\n    getPostsSuccess(state, action){\r\n      console.log(\"Updating Redux state with:\", action.payload);\r\n      state.posts = [...action.payload]; // Gán dữ liệu mới\r\n      state.loading = false;\r\n    },\r\n    getPostsFailed(state, action){\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // Action thêm bài viết mới\r\n    addPost(state, action){\r\n      state.posts.unshift(action.payload); //Thêm vào đầu mảng\r\n    },\r\n\r\n    // Xóa bài viết\r\n    deletePost(state, action){\r\n      state.posts = state.posts.filter((post)=>post.postId != action.payload);\r\n    },\r\n\r\n    // Cập nhật bài viết\r\n    updatePost(state, action){\r\n      const index = state.posts.findIndex((post)=>post.postId==action.payload);\r\n      if(index != -1){\r\n        state.posts[index] = action.payload;\r\n      }\r\n    },\r\n    toggleLikeState(state, action){\r\n      const { postId, userId } = action.payload;\r\n      const post = state.posts.find((p) => p.postId === postId);\r\n      if (post) {\r\n        const likes = post.likes || [];\r\n        const isLiked = likes.some(like => like.userId === userId);\r\n        if (isLiked) {\r\n          post.likes = likes.filter(like => like.userId !== userId);\r\n          post.likeCount -= 1;\r\n        } else {\r\n          post.likes.push({ userId, postId });\r\n          post.likeCount += 1;\r\n        }\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const{\r\n  getPostsStart, \r\n  getPostsSuccess, \r\n  getPostsFailed, \r\n  addPost,\r\n  deletePost,\r\n  updatePost, \r\n  toggleLikeState\r\n} = postSlice.actions;\r\n\r\n\r\nexport default postSlice.reducer;\r\n\r\n// export function SetPosts(post) {\r\n//   return (dispatch, getState) => {\r\n//     dispatch(postSlice.actions.getPosts(post));\r\n//   };\r\n// }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}