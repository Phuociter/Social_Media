{"ast":null,"code":"import axios from 'axios';\n\n// Tạo bài viết mới\nexport const createPost = async (userId, content, mediaFile) => {\n  const formData = new FormData();\n  formData.append(\"userId\", userId);\n  formData.append(\"content\", content);\n  if (mediaFile) {\n    mediaFile.forEach(file => {\n      formData.append(\"mediaFile\", file);\n    });\n  }\n  console.log(\"FormData Entries:\");\n  for (let pair of formData.entries()) {\n    console.log(pair[0], pair[1]);\n  }\n  const response = await axios.post(`/api/posts/create`, formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n  return response.data;\n};\n\n// Chỉnh sửa bài viết\nexport const editPost = async (postId, content, mediaFiles) => {\n  const formData = new FormData();\n  formData.append(\"content\", content);\n  if (mediaFiles) {\n    mediaFiles.forEach(file => {\n      formData.append(\"mediaFiles\", file);\n    });\n  }\n  const response = await axios.post(`/api/posts/update/${postId}`, formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n  return response.data;\n};\n\n// Xóa bài viết\nexport const removePost = async postId => {\n  const response = await axios.delete(`/api/posts/delete/${postId}`);\n  return response.data;\n};\n\n// Like bài viết\nexport const likePost = async (postId, userId) => {\n  const response = await axios.post(`/api/posts/like`, {\n    postId,\n    userId\n  });\n  return response.data;\n};\n\n// Bình luận bài viết\nexport const commentPost = async (postId, userId, comment) => {\n  const response = await axios.post(`/api/posts/comment`, {\n    postId,\n    userId,\n    comment\n  });\n  return response.data;\n};\n\n// Chia sẻ bài viết\nexport const sharePost = async (postId, userId) => {\n  const response = await axios.post(`/api/posts/share`, {\n    postId,\n    userId\n  });\n  return response.data;\n};\n\n// Lấy danh sách bài viết\nexport const getPosts = async userId => {\n  try {\n    const response = await axios.get(`/api/posts?userId=${userId}`);\n    console.log(\"API Response:\", response.data); // Log dữ liệu từ API\n    return response.data;\n  } catch (error) {\n    console.error(\"API Error:\", error);\n    return [];\n  }\n};","map":{"version":3,"names":["axios","createPost","userId","content","mediaFile","formData","FormData","append","forEach","file","console","log","pair","entries","response","post","headers","data","editPost","postId","mediaFiles","removePost","delete","likePost","commentPost","comment","sharePost","getPosts","get","error"],"sources":["D:/code/XDPMTMHPL/doan/FE_SocialMedia-main/src/api/PostAPI.js"],"sourcesContent":["import axios from 'axios';\n\n// Tạo bài viết mới\nexport const createPost = async (userId, content, mediaFile) => {\n  const formData = new FormData();\n  formData.append(\"userId\", userId);\n  formData.append(\"content\", content);\n\n  if(mediaFile){\n    mediaFile.forEach((file)=>{\n        formData.append(\"mediaFile\", file);\n    });\n  }\n  console.log(\"FormData Entries:\");\n  for (let pair of formData.entries()) {\n      console.log(pair[0], pair[1]);\n  }\n  \n  const response = await axios.post(`/api/posts/create`, formData, {\n    headers: {\"Content-Type\":\"multipart/form-data\"}\n  });\n  return response.data; \n};\n\n// Chỉnh sửa bài viết\nexport const editPost = async(postId, content, mediaFiles) => {\n    const formData = new FormData();\n    formData.append(\"content\", content);\n\n    if(mediaFiles){\n        mediaFiles.forEach((file)=>{\n            formData.append(\"mediaFiles\", file);\n        });\n      }\n    \n      const response = await axios.post(`/api/posts/update/${postId}`, formData, {\n        headers: {\"Content-Type\":\"multipart/form-data\"}\n      });\n      return response.data; \n\n};\n\n// Xóa bài viết\nexport const removePost = async(postId) => {\n    const response = await axios.delete(`/api/posts/delete/${postId}`);\n    return response.data;\n};\n\n// Like bài viết\nexport const likePost = async(postId, userId) => {\n    const response = await axios.post(`/api/posts/like`, {postId, userId});\n    return response.data;\n};\n\n// Bình luận bài viết\nexport const commentPost = async(postId, userId, comment) => {\n    const response = await axios.post(`/api/posts/comment`, {postId, userId, comment});\n    return response.data;\n};\n\n// Chia sẻ bài viết\nexport const sharePost = async(postId, userId) => {\n    const response = await axios.post(`/api/posts/share`, {postId, userId});\n    return response.data;\n};\n\n// Lấy danh sách bài viết\nexport const getPosts = async (userId) => {\n  try {\n      const response = await axios.get(`/api/posts?userId=${userId}`);\n      console.log(\"API Response:\", response.data); // Log dữ liệu từ API\n      return response.data;\n  } catch (error) {\n      console.error(\"API Error:\", error);\n      return [];\n  }\n};\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}