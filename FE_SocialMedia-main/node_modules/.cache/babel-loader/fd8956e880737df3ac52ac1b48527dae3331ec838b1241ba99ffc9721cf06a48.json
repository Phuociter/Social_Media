{"ast":null,"code":"var _window;\nimport { createSlice } from \"@reduxjs/toolkit\";\n\n// Khởi tạo state ban đầu, không sử dụng localStorage và không dùng dữ liệu mẫu từ asset\nconst initialState = {\n  user: JSON.parse((_window = window) === null || _window === void 0 ? void 0 : _window.localStorage.getItem(\"user\")),\n  edit: false\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    login(state, action) {\n      console.log(\"User data received:\", action.payload);\n      state.user = action.payload;\n      state.user.posts = action.payload.posts || [];\n      // Không lưu vào localStorage\n    },\n\n    logout(state) {\n      state.user = null;\n      // Không xóa dữ liệu từ localStorage\n    },\n\n    updateProfile(state, action) {\n      state.edit = action.payload;\n    }\n  }\n});\nexport default userSlice.reducer;\n\n// Action creator dùng để dispatch action đăng nhập với dữ liệu từ API\nexport function UserLogin(user) {\n  return dispatch => {\n    dispatch(userSlice.actions.login(user));\n  };\n}\n\n// Nếu cần đăng ký, bạn phải định nghĩa reducer register trong slice, nếu không, loại bỏ UserRegister.\n_c = UserLogin;\nexport function UserRegister(user) {\n  return dispatch => {\n    // Giả sử bạn có reducer register, nếu không, loại bỏ function này.\n    dispatch(userSlice.actions.register(user));\n  };\n}\n_c2 = UserRegister;\nexport function Logout() {\n  return dispatch => {\n    dispatch(userSlice.actions.logout());\n  };\n}\n_c3 = Logout;\nexport function UpdateProfile(val) {\n  return dispatch => {\n    dispatch(userSlice.actions.updateProfile(val));\n  };\n}\n_c4 = UpdateProfile;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"UserLogin\");\n$RefreshReg$(_c2, \"UserRegister\");\n$RefreshReg$(_c3, \"Logout\");\n$RefreshReg$(_c4, \"UpdateProfile\");","map":{"version":3,"names":["createSlice","initialState","user","JSON","parse","_window","window","localStorage","getItem","edit","userSlice","name","reducers","login","state","action","console","log","payload","posts","logout","updateProfile","reducer","UserLogin","dispatch","actions","_c","UserRegister","register","_c2","Logout","_c3","UpdateProfile","val","_c4","$RefreshReg$"],"sources":["D:/code/XDPMTMHPL/doan/FE_SocialMedia-main/src/redux/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// Khởi tạo state ban đầu, không sử dụng localStorage và không dùng dữ liệu mẫu từ asset\r\nconst initialState = {\r\n  user: JSON.parse(window?.localStorage.getItem(\"user\")),\r\n  edit: false,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    login(state, action) {\r\n      console.log(\"User data received:\", action.payload);\r\n      state.user = action.payload;\r\n      state.user.posts = action.payload.posts || [];\r\n      // Không lưu vào localStorage\r\n    },\r\n    logout(state) {\r\n      state.user = null;\r\n      // Không xóa dữ liệu từ localStorage\r\n    },\r\n    updateProfile(state, action) {\r\n      state.edit = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default userSlice.reducer;\r\n\r\n// Action creator dùng để dispatch action đăng nhập với dữ liệu từ API\r\nexport function UserLogin(user) {\r\n  return (dispatch) => {\r\n    dispatch(userSlice.actions.login(user));\r\n  };\r\n}\r\n\r\n// Nếu cần đăng ký, bạn phải định nghĩa reducer register trong slice, nếu không, loại bỏ UserRegister.\r\nexport function UserRegister(user) {\r\n  return (dispatch) => {\r\n    // Giả sử bạn có reducer register, nếu không, loại bỏ function này.\r\n    dispatch(userSlice.actions.register(user));\r\n  };\r\n}\r\n\r\nexport function Logout() {\r\n  return (dispatch) => {\r\n    dispatch(userSlice.actions.logout());\r\n  };\r\n}\r\n\r\nexport function UpdateProfile(val) {\r\n  return (dispatch) => {\r\n    dispatch(userSlice.actions.updateProfile(val));\r\n  };\r\n}\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAEC,IAAI,CAACC,KAAK,EAAAC,OAAA,GAACC,MAAM,cAAAD,OAAA,uBAANA,OAAA,CAAQE,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACtDC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,SAAS,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,MAAM;EACZV,YAAY;EACZW,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,MAAM,CAACG,OAAO,CAAC;MAClDJ,KAAK,CAACZ,IAAI,GAAGa,MAAM,CAACG,OAAO;MAC3BJ,KAAK,CAACZ,IAAI,CAACiB,KAAK,GAAGJ,MAAM,CAACG,OAAO,CAACC,KAAK,IAAI,EAAE;MAC7C;IACF,CAAC;;IACDC,MAAMA,CAACN,KAAK,EAAE;MACZA,KAAK,CAACZ,IAAI,GAAG,IAAI;MACjB;IACF,CAAC;;IACDmB,aAAaA,CAACP,KAAK,EAAEC,MAAM,EAAE;MAC3BD,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACG,OAAO;IAC7B;EACF;AACF,CAAC,CAAC;AAEF,eAAeR,SAAS,CAACY,OAAO;;AAEhC;AACA,OAAO,SAASC,SAASA,CAACrB,IAAI,EAAE;EAC9B,OAAQsB,QAAQ,IAAK;IACnBA,QAAQ,CAACd,SAAS,CAACe,OAAO,CAACZ,KAAK,CAACX,IAAI,CAAC,CAAC;EACzC,CAAC;AACH;;AAEA;AAAAwB,EAAA,GANgBH,SAAS;AAOzB,OAAO,SAASI,YAAYA,CAACzB,IAAI,EAAE;EACjC,OAAQsB,QAAQ,IAAK;IACnB;IACAA,QAAQ,CAACd,SAAS,CAACe,OAAO,CAACG,QAAQ,CAAC1B,IAAI,CAAC,CAAC;EAC5C,CAAC;AACH;AAAC2B,GAAA,GALeF,YAAY;AAO5B,OAAO,SAASG,MAAMA,CAAA,EAAG;EACvB,OAAQN,QAAQ,IAAK;IACnBA,QAAQ,CAACd,SAAS,CAACe,OAAO,CAACL,MAAM,CAAC,CAAC,CAAC;EACtC,CAAC;AACH;AAACW,GAAA,GAJeD,MAAM;AAMtB,OAAO,SAASE,aAAaA,CAACC,GAAG,EAAE;EACjC,OAAQT,QAAQ,IAAK;IACnBA,QAAQ,CAACd,SAAS,CAACe,OAAO,CAACJ,aAAa,CAACY,GAAG,CAAC,CAAC;EAChD,CAAC;AACH;AAACC,GAAA,GAJeF,aAAa;AAAA,IAAAN,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAJ,GAAA;AAAAI,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}